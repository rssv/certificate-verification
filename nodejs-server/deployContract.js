require('dotenv').config();
const express = require('express');
const Web3 = require('web3');
const sha256 = require('sha256');

const app = express();
const port = process.env.PORT || 3000;
const SmartContractABI = [
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [
			{
				"internalType": "bytes",
				"name": "adm",
				"type": "bytes"
			},
			{
				"internalType": "uint256",
				"name": "sem",
				"type": "uint256"
			}
		],
		"name": "getResult",
		"outputs": [
			{
				"internalType": "bytes",
				"name": "",
				"type": "bytes"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes",
				"name": "hash",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "adm",
				"type": "bytes"
			},
			{
				"internalType": "uint256",
				"name": "sem",
				"type": "uint256"
			}
		],
		"name": "storeResult",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]

app.get('/deploy-contract', async(req, res) => {
    const web3 = new Web3(process.env.BLOCKCHAIN_URL);
    const myContract = new web3.eth.Contract(SmartContractABI);
    const contractData = "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610844806100606000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063892a1a121461003b578063bad16b9a14610057575b600080fd5b610055600480360381019061005091906103d5565b610087565b005b610071600480360381019061006c9190610460565b6101e2565b60405161007e9190610583565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010c906105c5565b60405180910390fd5b6000600183604051610127919061056c565b908152602001604051809103902060000160008381526020019081526020016000208054610154906106bf565b905014610196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018d906105a5565b60405180910390fd5b826001836040516101a7919061056c565b9081526020016040518091039020600001600083815260200190815260200160002090805190602001906101dc9291906102ad565b50505050565b606060006001846040516101f6919061056c565b908152602001604051809103902060000160008481526020019081526020016000208054610223906106bf565b80601f016020809104026020016040519081016040528092919081815260200182805461024f906106bf565b801561029c5780601f106102715761010080835404028352916020019161029c565b820191906000526020600020905b81548152906001019060200180831161027f57829003601f168201915b505050505090508091505092915050565b8280546102b9906106bf565b90600052602060002090601f0160209004810192826102db5760008555610322565b82601f106102f457805160ff1916838001178555610322565b82800160010185558215610322579182015b82811115610321578251825591602001919060010190610306565b5b50905061032f9190610333565b5090565b5b8082111561034c576000816000905550600101610334565b5090565b600061036361035e8461060a565b6105e5565b90508281526020810184848401111561037f5761037e610785565b5b61038a84828561067d565b509392505050565b600082601f8301126103a7576103a6610780565b5b81356103b7848260208601610350565b91505092915050565b6000813590506103cf816107f7565b92915050565b6000806000606084860312156103ee576103ed61078f565b5b600084013567ffffffffffffffff81111561040c5761040b61078a565b5b61041886828701610392565b935050602084013567ffffffffffffffff8111156104395761043861078a565b5b61044586828701610392565b9250506040610456868287016103c0565b9150509250925092565b600080604083850312156104775761047661078f565b5b600083013567ffffffffffffffff8111156104955761049461078a565b5b6104a185828601610392565b92505060206104b2858286016103c0565b9150509250929050565b60006104c78261063b565b6104d18185610646565b93506104e181856020860161068c565b6104ea81610794565b840191505092915050565b60006105008261063b565b61050a8185610657565b935061051a81856020860161068c565b80840191505092915050565b6000610533601483610662565b915061053e826107a5565b602082019050919050565b6000610556600a83610662565b9150610561826107ce565b602082019050919050565b600061057882846104f5565b915081905092915050565b6000602082019050818103600083015261059d81846104bc565b905092915050565b600060208201905081810360008301526105be81610526565b9050919050565b600060208201905081810360008301526105de81610549565b9050919050565b60006105ef610600565b90506105fb82826106f1565b919050565b6000604051905090565b600067ffffffffffffffff82111561062557610624610751565b5b61062e82610794565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156106aa57808201518184015260208101905061068f565b838111156106b9576000848401525b50505050565b600060028204905060018216806106d757607f821691505b602082108114156106eb576106ea610722565b5b50919050565b6106fa82610794565b810181811067ffffffffffffffff8211171561071957610718610751565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f6f76657277726974652070726f68696269746564000000000000000000000000600082015250565b7f70726f6869626974656400000000000000000000000000000000000000000000600082015250565b61080081610673565b811461080b57600080fd5b5056fea264697066735822122092811fbb73a92ca790207285f58cd0a4d08c3abb2183b88af9b8728f3f09cc3f64736f6c63430008070033"
    myContract.options.data = contractData;
    await web3.eth.personal.unlockAccount('0x1e0b8f4522c3c43bbe3cd31595e8f9b2d9193528','1234')
    myContract.deploy()
    .send({
        from: '0x1e0b8f4522c3c43bbe3cd31595e8f9b2d9193528'
    })
    .then(function(newContractInstance){
        console.log(newContractInstance.options.address) // instance with the new contract address
    });
 
})


app.listen(port, () => console.log('app is listening on port', port));



